// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  MANAGER
  CLIENT
  EMPLOYEE
}

enum EmployeeRole {
  MARKETER
  DEVELOPER
  UX_UI_DESIGNER
}

model User {
  id           String        @id @default(uuid())
  clerkUserId  String?       @unique
  activated    Boolean       @default(false)
  email        String        @unique
  role         Role
  employeeRole EmployeeRole?
  bio          String?       @db.Text
  firstName    String?
  lastName     String?
  imageUrl     String?
  adress       String?       @db.Text
  username     String?       @unique

  leaderOfProjects Project[] @relation("teamLeader")

  clientOfProjects Project[] @relation("client")

  projects Project[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Stat {
  notStarted
  inProgress
  completed
}

model Project {
  id             String    @id @default(uuid())
  title          String
  description    String?
  projectDetails String?
  from           DateTime?
  to             DateTime?
  stat           Stat      @default(notStarted)
  imageUrl       String?

  teamLeaderId String
  teamLeader   User   @relation(fields: [teamLeaderId], references: [id], onDelete: Cascade, name: "teamLeader")

  clientId String
  client   User   @relation(fields: [clientId], references: [id], onDelete: Cascade, name: "client")

  assignedTo User[]
  steps      Step[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Step {
  id        String  @id @default(uuid())
  title     String
  completed Boolean

  projectId String
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
}
